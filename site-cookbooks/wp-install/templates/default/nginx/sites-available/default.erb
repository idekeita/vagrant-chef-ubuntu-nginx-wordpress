# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server {
	# listen   80; ## listen for ipv4; this line is default and implied
	# listen   [::]:80 default ipv6only=on; ## listen for ipv6

	root /usr/share/nginx/www;
	index index.php index.html index.htm;

	# Make site accessible from http://localhost/
	server_name vmhost;
	charset utf-8;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to index.html
		try_files $uri $uri/ /index.html;
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules
	}

	location /doc/ {
		alias /usr/share/doc/;
		autoindex on;
		allow 127.0.0.1;
		deny all;
	}

	# Only for nginx-naxsi : process denied requests
	#location /RequestDenied {
		# For example, return an error code
		#return 418;
	#}

	#error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page 500 502 503 504 /50x.html;
	#location = /50x.html {
	#	root /usr/share/nginx/www;
	#}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	location ~ \.php$ {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini

		# With php5-cgi alone:
		fastcgi_pass unix:/var/run/php5-fpm.sock;
		# With php5-fpm:
		fastcgi_index index.php;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		include fastcgi_params;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8080;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ /index.html;
#	}
#}


# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1;
#	ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ /index.html;
#	}
#}

upstream backend {
	server 127.0.0.1:8080;
}

server {
	listen 80;
	server_name www.<%= node['wp_install']['server_name'] %>;
	rewrite ^ http://<%= node['wp_install']['server_name'] %>$request_uri? permanent;
}

server {
	listen   80;
	server_name <%= node['wp_install']['server_name'] %>;
	root <%= node['wp_install']['server_root'] %>;
	index index.php index.html index.htm
	charset utf-8;

	access_log /var/log/nginx/front_access.log combined;
	error_log /var/log/nginx/front_error.log warn;

	location / {
		proxy_pass http://backend;
		set $do_not_cache <%= node['nginx']['do_not_cache'] %>;
		proxy_no_cache $do_not_cache;
		proxy_cache_bypass $do_not_cache;
		proxy_cache zone;
		proxy_cache_key $scheme$proxy_host$uri$is_args$args;
		proxy_cache_valid  200 1d;
	}

	location ~ .*\.(html?|jpe?g|gif|png|css|js|ico|woff) {
		access_log off;
		expires <%= node['nginx']['expire']; %>;
	}

	location /wp-admin {
		proxy_pass http://backend;
	}
	location /wp-login.php {
		proxy_pass http://backend;
	}

	location ~ /\.ht {
		deny all;
	}

	pagespeed on;

	# Needs to exist and be writable by nginx.
	pagespeed FileCachePath /var/ngx_pagespeed_cache;

	# Ensure requests for pagespeed optimized resources go to the pagespeed handler
	# and no extraneous headers get set.
	location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
		add_header "" "";
	}
	location ~ "^/ngx_pagespeed_static/" { }
	location ~ "^/ngx_pagespeed_beacon$" { }
	location /ngx_pagespeed_statistics { allow 127.0.0.1; deny all; }
	location /ngx_pagespeed_global_statistics { allow 127.0.0.1; deny all; }
	location /ngx_pagespeed_message { allow 127.0.0.1; deny all; }
	location /pagespeed_console { allow 127.0.0.1; deny all; }

	pagespeed RewriteLevel PassThrough;
	pagespeed EnableFilters move_css_above_scripts,move_css_to_head;
	pagespeed EnableFilters combine_css,rewrite_css,fallback_rewrite_css_urls;
	pagespeed EnableFilters inline_css,extend_cache_css;
	pagespeed EnableFilters rewrite_javascript,combine_javascript;
	pagespeed EnableFilters defer_javascript,inline_javascript;
	pagespeed EnableFilters lazyload_images;
	pagespeed LazyloadImagesAfterOnload on;
}

server {
	listen 8080;
	server_name <%= node['wp_install']['server_name'] %>;
	root <%= node['wp_install']['server_root'] %>;
	index index.php index.html index.htm;
	charset utf-8;

	access_log /var/log/nginx/fastcgi_access.log combined;
	error_log /var/log/nginx/fastcgi_error.log warn;

	location / {
		if (!-e $request_filename) {
			rewrite ^.+?($/-.*) $1 last;
			rewrite ^.+?(/.*\.php)$ $1 last;
			rewrite ^ /index.php last;
		}
	}

	location ~ \.php$ {
		fastcgi_pass unix:/var/run/php5-fpm.sock;
		fastcgi_index index.php;
		fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
		include fastcgi_params;
		fastcgi_pass_header "X-Accel-Redirect";
		fastcgi_pass_header "X-Accel-Expires";
	}
}
